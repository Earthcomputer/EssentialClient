plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.6.0'
	id 'maven-publish'
}

repositories {
	maven {
		url 'https://masa.dy.fi/maven'
	}
	maven {
		url "https://maven.terraformersmc.com/releases/"
	}
	mavenCentral()
	maven {
		url 'https://jitpack.io'
	}
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.minecraft_version + '-' + project.mod_version
group = project.maven_group

minecraft {
}

configurations {
	// implementations that should be included in the jar file
	packImplementation {
		transitive false
	}

	implementation.extendsFrom(packImplementation)
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	packImplementation "com.github.senseiwells:Arucas:7becdfa82d827219bbcafe012a18b2e0b60788c2"
	packImplementation "com.github.senseiwells:ArucasDiscordAPI:efd7f8675321b44549a604abdafbe1174f4cef14"

	// javax.annotation.Nullable/Nonnull
	compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
	// compileOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modCompileOnly fabricApi.module("fabric-textures-v0", project.fabric_version)
	modCompileOnly fabricApi.module("fabric-rendering-fluids-v1", project.fabric_version)

	modImplementation("net.earthcomputer.multiconnect:multiconnect-api:${project.multiconnect_api_version}") { transitive = false }
	include("net.earthcomputer.multiconnect:multiconnect-api:${project.multiconnect_api_version}") { transitive = false }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"

	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from "LICENSE"
	from {
		configurations.packImplementation.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
